version: '3.8'

services:
  # Your Sovereign Agent Platform Backend
  sovereign-backend:
    build:
      context: .
      dockerfile: Dockerfile.webui
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - OPENWEBUI_INTEGRATION=true
      - LOG_LEVEL=INFO
      - PUBLIC_DEPLOYMENT=true
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./sovereign_webui_pipeline.py:/app/sovereign_webui_pipeline.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sovereign-network

  # Open WebUI Frontend with your 7 agents
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    ports:
      - "8080:8080"
    environment:
      - WEBUI_AUTH=false
      - ENABLE_RAG_WEB_SEARCH=true
      - ENABLE_RAG_LOCAL_WEB_FETCH=true
      - WEBUI_URL=http://0.0.0.0:8080
      - OLLAMA_BASE_URL=http://sovereign-backend:8000
      - ENABLE_COMMUNITY_SHARING=true
      - WEBUI_NAME="Sovereign Agent Platform"
      - DEFAULT_MODELS=consciousness,retrieval,monitoring,orchestration,pipeline,governance,memory
    volumes:
      - open-webui-data:/app/backend/data
      - ./sovereign_webui_pipeline.py:/app/backend/pipelines/sovereign_webui_pipeline.py
    depends_on:
      - sovereign-backend
    restart: unless-stopped
    networks:
      - sovereign-network

  # Reverse Proxy for Public Access (Nginx)
  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - open-webui
      - sovereign-backend
    restart: unless-stopped
    networks:
      - sovereign-network

  # Redis for performance optimization
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - sovereign-network

volumes:
  open-webui-data:
  redis-data:

networks:
  sovereign-network:
    driver: bridge
